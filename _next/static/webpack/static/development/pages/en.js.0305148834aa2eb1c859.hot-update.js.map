{"version":3,"file":"static/webpack/static/development/pages/en.js.0305148834aa2eb1c859.hot-update.js","sources":["webpack:///./components/OverviewCard.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  Row,\n  Col,\n  Card,\n  Badge,\n  OverlayTrigger,\n  Tooltip,\n} from 'react-bootstrap';\nimport useTranslation from 'next-translate/useTranslation';\n\nconst OverviewCard = (props) => {\n  const {\n    title,\n    value,\n    today,\n    diff,\n    icon,\n    variant,\n    diffTranslationPrefix,\n  } = props;\n\n  const { t } = useTranslation();\n  const diffType = diff > 0 && today >= 0 ? t('home:charts.higher') : t('home:charts.lower');\n\n  return (\n    <Card className={`border-left-${variant} shadow h-100 py-2`}>\n      <Card.Body>\n        <Row noGutters className=\"align-items-center\">\n          <Col className=\"mr-2\">\n            <div className={`text-xs font-weight-bold text-${variant} text-uppercase mb-1`}>\n              {title}\n            </div>\n            <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n              {value}\n              <OverlayTrigger overlay={(\n                <Tooltip>\n                  <small>\n                    {today >= 0 && t(`home:charts.${diffTranslationPrefix ? `${diffTranslationPrefix}.` : ''}new_cases_today`, { count: today })}\n                    &nbsp;\n                    {t(`home:charts.${diffTranslationPrefix ? `${diffTranslationPrefix}.` : ''}diff_cases`, { count: Math.abs(today >= 0 ? diff : today), diffType })}\n                  </small>\n                </Tooltip>\n              )}\n              >\n                <sup>\n                  <Badge variant=\"light\">\n                    {\n                      diff > 0 && today >= 0\n                        ? <i className=\"fas fa-caret-up\" />\n                        : <i className=\"fas fa-caret-down\" />\n                    }\n                    &nbsp;\n                    {today}\n                  </Badge>\n                </sup>\n              </OverlayTrigger>\n            </div>\n          </Col>\n          <div className=\"col-auto\">\n            <i className={`fas ${icon} fa-2x text-gray-300`} />\n          </div>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nOverviewCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  today: PropTypes.number.isRequired,\n  diff: PropTypes.number.isRequired,\n  icon: PropTypes.string.isRequired,\n  variant: PropTypes.string.isRequired,\n  diffTranslationPrefix: PropTypes.string,\n};\n\nOverviewCard.defaultProps = {\n  diffTranslationPrefix: '',\n};\n\nexport default OverviewCard;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAWA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AADA;AAIA;;;;A","sourceRoot":""}