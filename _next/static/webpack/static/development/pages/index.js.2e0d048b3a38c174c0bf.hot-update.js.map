{"version":3,"file":"static/webpack/static/development/pages/index.js.2e0d048b3a38c174c0bf.hot-update.js","sources":["webpack:///./pages_/index.js"],"sourcesContent":["/* eslint-disable react/jsx-wrap-multilines */\nimport { NextSeo } from 'next-seo';\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Badge,\n  Spinner,\n} from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Moment from 'react-moment';\nimport useTranslation from 'next-translate/useTranslation';\nimport BaseLayout from '../components/BaseLayout';\nimport CasesOverview from '../components/CasesOverview';\nimport CasesLineChart from '../components/CasesLineChart';\nimport CasesBarChart from '../components/CasesBarChart';\nimport CasesGenderPieChart from '../components/CasesGenderPieChart';\nimport CasesPieChart from '../components/CasesPieChart';\n\nconst Index = () => {\n  const { t } = useTranslation();\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalsData, setTotalsData] = useState({});\n  const [dateCasesData, setDateCasesData] = useState({});\n  const [dateDiffCasesData, setDateDiffCasesData] = useState({});\n\n  const prepareChartData = (dataset) => {\n    if (dataset == null) return [];\n\n    return Object.fromEntries(Object.entries(dataset).map(entry => [entry[0], entry[1].cases]));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const totalsDataset = await fetch('https://raw.githubusercontent.com/COVID-19-Bulgaria/covid-database/master/Bulgaria/TotalsDataset.json');\n        setTotalsData(await totalsDataset.json());\n\n        const dateCasesDataset = await fetch('https://raw.githubusercontent.com/COVID-19-Bulgaria/covid-database/master/Bulgaria/DateCasesDataset.json');\n        setDateCasesData(await dateCasesDataset.json());\n\n        const dateDiffCasesDataset = await fetch('https://raw.githubusercontent.com/COVID-19-Bulgaria/covid-database/master/Bulgaria/DateDiffCasesDataset.json');\n        setDateDiffCasesData(await dateDiffCasesDataset.json());\n\n        setIsLoading(false);\n      } catch (error) {\n        // Empty\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const lineChartData = [\n    { name: t('home:charts.infected'), data: prepareChartData(dateCasesData.infected) },\n    { name: t('home:charts.cured'), data: prepareChartData(dateCasesData.cured) },\n    { name: t('home:charts.fatal'), data: prepareChartData(dateCasesData.fatal) },\n  ];\n\n  const barChartData = [\n    { name: t('home:charts.infected'), data: prepareChartData(dateDiffCasesData.infected) },\n    { name: t('home:charts.cured'), data: prepareChartData(dateDiffCasesData.cured) },\n    { name: t('home:charts.fatal'), data: prepareChartData(dateDiffCasesData.fatal) },\n  ];\n\n  return (\n    <BaseLayout>\n      <NextSeo\n        title={t('home:seo.title')}\n        description={t('home:seo.description')}\n        openGraph={{\n          images: [\n            {\n              url: `https://coronavirus-bulgaria.org/static/images/open_graph_linechart.png?v=${process.env.BUILD_ID}`,\n              width: 1200,\n              height: 630,\n              alt: t('home:charts.cases_linechart.title'),\n            },\n          ],\n        }}\n      />\n      <Container fluid>\n        <div className=\"d-sm-flex align-items-center justify-content-between my-4\">\n          <h1 className=\"h3 mb-0 text-gray-800\">{t('home:page_title')}</h1>\n        </div>\n        {isLoading ? <Spinner animation=\"border\" variant=\"primary\" />\n          : (\n            <>\n              <Badge variant=\"info\">\n                {t('home:last_updated')}&nbsp;\n                <Moment parse=\"YYYY-MM-DD HH:mm:ss ZZ\" format={t('common:date_format')}>\n                  {totalsData.timestamp}\n                </Moment>\n              </Badge>\n              <CasesOverview\n                totalsData={totalsData}\n                dateDiffCasesData={dateDiffCasesData}\n              />\n              <Row>\n                <Col md={6}>\n                  <Card className=\"shadow mb-4\">\n                    <Card.Header className=\"py-3 d-flex flex-row align-items-center justify-content-between\">\n                      <h6 className=\"m-0 font-weight-bold text-primary\">{t('home:charts.cases_linechart.title')}</h6>\n                    </Card.Header>\n                    <Card.Body>\n                      <CasesLineChart data={lineChartData} />\n                    </Card.Body>\n                  </Card>\n                </Col>\n                <Col md={6}>\n                  <Card className=\"shadow mb-4\">\n                    <Card.Header className=\"py-3 d-flex flex-row align-items-center justify-content-between\">\n                      <h6 className=\"m-0 font-weight-bold text-primary\">{t('home:charts.cases_barchart.title')}</h6>\n                    </Card.Header>\n                    <Card.Body>\n                      <CasesBarChart data={barChartData} />\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n              <Row>\n                <Col md={6}>\n                  <Card className=\"shadow mb-4\">\n                    <Card.Header className=\"py-3 d-flex flex-row align-items-center justify-content-between\">\n                      <h6 className=\"m-0 font-weight-bold text-primary\">{t('home:charts.cases_gender_piechart.title')}</h6>\n                    </Card.Header>\n                    <Card.Body>\n                      <CasesGenderPieChart infected={totalsData.infected} men={totalsData.men} women={totalsData.women} />\n                    </Card.Body>\n                  </Card>\n                </Col>\n                <Col md={6}>\n                  <Card className=\"shadow mb-4\">\n                    <Card.Header className=\"py-3 d-flex flex-row align-items-center justify-content-between\">\n                      <h6 className=\"m-0 font-weight-bold text-primary\">{t('home:charts.cases_piechart.title')}</h6>\n                    </Card.Header>\n                    <Card.Body>\n                      <CasesPieChart infected={totalsData.infected} cured={totalsData.cured} fatal={totalsData.fatal} />\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            </>\n          )}\n      </Container>\n    </BaseLayout>\n  );\n};\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAQA;AARA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAWA;AAXA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAFA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcsourceRoot":""}