{"version":3,"file":"static/webpack/2.3c86dfeb6889a1f8edc5.hot-update.js","sources":["webpack:///./simulations/sketches/RulesSketch.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport PropTypes from 'prop-types';\nimport { useRef, useEffect, useState } from 'react';\nimport P5 from 'p5';\nimport { setupCanvas, handleInteractions } from '../SketchHelpers';\nimport Replay from '../Replay';\n\nconst RulesSketch = (props) => {\n  const {\n    id,\n    backgroundColor,\n    maxFrameCount,\n    setupPopulation,\n  } = props;\n\n  const canvasWidth = 300;\n  const canvasHeight = 100;\n\n  const containerRef = useRef();\n  const [showReplay, setShowReplay] = useState(false);\n  const [handleReplay, setHandleReplay] = useState();\n\n  const sketch = (p) => {\n    let population = [];\n\n    const initialize = () => {\n      population = [];\n      setupPopulation(p, population);\n      setShowReplay(false);\n      p.frameCount = -1;\n      p.loop();\n    };\n\n    p.setup = () => {\n      setupCanvas(p, canvasWidth, canvasHeight);\n      setupPopulation(p, population);\n      setHandleReplay(() => initialize);\n    };\n\n    p.draw = () => {\n      if (p.frameCount === maxFrameCount) {\n        p.noLoop();\n        setShowReplay(true);\n      }\n\n      p.background(backgroundColor);\n\n      population.forEach((person) => {\n        person.move();\n        handleInteractions(p, person, population);\n        person.render();\n      });\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      if (entries[0].isIntersecting) {\n        p.loop();\n      } else {\n        p.noLoop();\n      }\n    });\n\n    observer.observe(containerRef.current);\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line no-new\n    new P5(sketch, containerRef.current);\n  }, []);\n\n  return (\n    <div id={id} ref={containerRef} className={showReplay && 'overlay'} style={{ maxWidth: canvasWidth, position: 'relative' }}>\n      <Replay show={showReplay} onClick={handleReplay} />\n      <style jsx global>\n        {`\n          .overlay canvas {\n            opacity: 0.2;\n          }\n\n          canvas.simulation {\n            width: 100% !important;\n            height: auto !important;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nRulesSketch.propTypes = {\n  id: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string,\n  maxFrameCount: PropTypes.number,\n  setupPopulation: PropTypes.func.isRequired,\n};\n\nRulesSketch.defaultProps = {\n  backgroundColor: '#f8f9fc',\n  maxFrameCount: 500,\n};\n\nexport default RulesSketch;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAEA;AACA;AAZA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}